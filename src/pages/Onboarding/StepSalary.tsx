import { Box, TextField, Typography, useTheme } from "@mui/material";
import { useFormContext } from "react-hook-form";
import ChatBubble from "../../components/ChatBubble";
import StepNavigationBtn from "../../components/StepNavigationBtn";

interface StepSalaryProps {
  onNext: () => void;
  onBack: () => void;
  setValue: (name: string, value: any) => void;
}

const StepSalary = ({ onNext, onBack, setValue }: StepSalaryProps) => {
  const theme = useTheme();
  const { register, watch } = useFormContext();
  const salary = watch("salary", ""); // Se actualiza en tiempo real
  const name = watch("name", "");

  const handleNext = () => {
    setValue("salary", Number(salary));
    onNext();
  };

  return (
    <Box
      sx={{
        display: "flex",
        flexDirection: "column",
        gap: 3,
        alignItems: "center",
      }}
    >
      <Typography
        variant="h5"
        fontWeight="bold"
        color={theme.palette.customColors.black}
      >
        Â¿CuÃ¡l es tu sueldo mensual? ðŸ’°
      </Typography>

      <TextField
        {...register("salary")}
        type="text"
        label="Tu salario"
        variant="outlined"
        value={salary ? salary.toLocaleString("es-ES") : ""} // Formateo en tiempo real
        onChange={(e) => {
          const rawValue = e.target.value.replace(/\D/g, ""); // Solo permite nÃºmeros
          setValue("salary", rawValue ? Number(rawValue) : ""); // Guarda el nÃºmero limpio
        }}
        fullWidth
      />

      <StepNavigationBtn
        onBack={onBack}
        onNext={handleNext}
        disabled={!salary}
      />

      <ChatBubble
        text={`Eh... esto es un poco incÃ³modo ${name}, pero... Â¿me podrÃ­as decir cuÃ¡l es tu sueldo mensual? Sin eso, no podrÃ© ayudarte. Es importante para que puedas aprovechar al mÃ¡ximo la app.  Prometo guardar el secreto mejor que un banco suizo. Â¡Palabra de Arturo! ðŸ’°ðŸ¤«`}
      />
    </Box>
  );
};

export default StepSalary;
